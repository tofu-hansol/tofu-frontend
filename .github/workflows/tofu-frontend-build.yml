# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: tofu-frontend CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up node.js
      uses: actions/setup-node@v3
        
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
        
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    
    - name: Generate Environment Variables File for Production
        run: |
          echo "API_URL=$API_URL" >> .env
          echo "NAVER_MAP_API_KEY=$NAVER_MAP_API_KEY" >> .env
          echo "NAVER_MAPS_CLIENT_ID=$NAVER_MAPS_CLIENT_ID" >> .env
        env:
          API_URL: ${{ secrets.API_URL }}
          NAVER_MAP_API_KEY: ${{ secrets.NAVER_MAP_API_KEY }}
          NAVER_MAPS_CLIENT_ID: ${{ secrets.NAVER_MAPS_CLIENT_ID }}
        
    - name: Install dependencies
      # if: steps.cache.outputs.cache-hit == ''
      run: yarn install
      
    - name: build
      run: yarn build 

    - name: Docker Login
      uses: docker/login-action@v2.2.0
      with:
        username: ${{secrets.DOCKERHUB_USER}}
        password: ${{secrets.DOCKERHUB_ACCESS_TOKEN}}

    - name: Build and push Docker images
      uses: docker/build-push-action@v4.1.1
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: phj0860/tofu-frontend
        labels: latest
